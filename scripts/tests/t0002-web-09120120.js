{analytics.track("interaction",properties)}return{registerUser:registerUser,trackInteraction:trackInteraction}}angular.module("ConferenceRoomApp.services").factory("Analytics",AnalyticsService)}(),function(){"use strict";angular.module("ConferenceRoomApp.services").factory("CreditService",function($http){return{addCreditUsageMessage:function(){return $http.get("/infos/credit_usage_message",{params:{raw_html:!0}})}}})}(),function(){angular.module("ConferenceRoomApp.services").factory("WeeklyChairReservation",function(Restangular){var baseWeeklyChairReservations;return Restangular.setBaseUrl("/api/v1"),Restangular.setRequestSuffix(".json"),baseWeeklyChairReservations=Restangular.all("daily_chair_reservations"),{all:function(params){return baseWeeklyChairReservations.customGETLIST(null,params)},upcoming:function(params){return baseWeeklyChairReservations.customGETLIST("upcoming",params)},pastOrCancelled:function(params){return baseWeeklyChairReservations.customGETLIST("past_or_cancelled",params)},get:function(id){return Restangular.one("daily_chair_reservations",id).doGET()},cancel:function(id){return Restangular.one("daily_chair_reservations",id).remove()}}})}.call(this),function(){angular.module("ConferenceRoomApp.services").factory("WeeklyChair",function(Restangular){var baseWeeklyChairs;return Restangular.setBaseUrl("/api/v1"),Restangular.setRequestSuffix(".json"),baseWeeklyChairs=Restangular.all("daily_chairs"),{one:function(id,params){return Restangular.one("daily_chairs",id).get(params)},all:function(params){return baseWeeklyChairs.getList(null,params)},by_city:function(params){return baseWeeklyChairs.customGET("by_city",params)},saveReservation:function(id,newReservation){return Restangular.one("daily_chairs",id).customPOST(newReservation,"reservations")}}}).factory("chairImage",function(){return{imgStyle:function(chair){if(chair&&chair.image_url.length)return{"background-image":"url("+chair.image_url+")"}}}})}.call(this),function(){angular.module("ConferenceRoomApp.services").factory("Events",function($log,$http){var appendTransform,doTransform,encryptedUserUuid,url;return encryptedUserUuid="RyXVXJfWEa1D34Qfy_7xsdQeras32tATy-kRzcRExCVhRERf4-_mADEWFDSE6d_x",UUID_WAS_ONLY_AN_EXAMPLE=foo,url="https://rootapi.domain.com/api/v5/",appendTransform=function(defaults,transform){return(defaults=angular.isArray(defaults)?defaults:[defaults]).concat(transform)},doTransform=function(value,params){var date,events;return null==params&&(params={}),date=params.date,events=_.map(value.results,function(result){var event;return(event=result.meta_data.event).date=moment(event.start_date,"MM/DD/YYYY").toDate(),event}),date&&(date=moment(date),events=_.filter(events,function(event){var eventDate;return eventDate=moment(event.start_date,"MM/DD/YYYY"),date.dayOfYear()===eventDate.dayOfYear()})),events},{upcoming:function(params){return $http({url:url,cache:!0,params:{encrypted_user_uuid:encryptedUserUuid,index:"events",location_uuids:params.location.uuid},transformResponse:appendTransform($http.defaults.transformResponse,function(value){return doTransform(value,params)})})}}})}.call(this),function()